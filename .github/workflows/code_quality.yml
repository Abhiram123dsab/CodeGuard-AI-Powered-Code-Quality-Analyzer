name: Code Quality Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install backend dependencies
      working-directory: ./backend
      run: pip install -r requirements.txt

    - name: Run Python tests
      working-directory: ./backend
      run: pytest -v

    - name: Run Python linters
      working-directory: ./backend
      run: |
        pylint --recursive=y .
        flake8 .

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run frontend lint
      working-directory: ./frontend
      run: npx eslint . --ext .js,.jsx

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Run Python linters
      run: |
        pylint --output-format=text backend/
        flake8 backend/
        radon cc backend/

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run ESLint
      run: |
        cd frontend
        npx eslint . --ext .js,.jsx

    - name: Post analysis results
      if: always()
      uses: actions/github-script@v6
      with:
        script: |
          const output = `Pylint Output:\n${{ steps.python-linters.outputs.pylint-result }}\n\nESLint Output:\n${{ steps.eslint.outputs.eslint-result }}`
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })