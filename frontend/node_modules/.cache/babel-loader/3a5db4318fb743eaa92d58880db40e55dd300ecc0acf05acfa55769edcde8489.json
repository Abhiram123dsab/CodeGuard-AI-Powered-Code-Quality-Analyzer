{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhir\\\\OneDrive\\\\Desktop\\\\CodeGuard\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport FileUpload from './components/FileUpload';\nimport ScoreDisplay from './components/ScoreDisplay';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileUpload = async file => {\n    setError(null);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:8000/analyze', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setAnalysisResult(data);\n    } catch (error) {\n      setError('Failed to analyze file - please check the format and try again');\n      console.error('Error analyzing file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CodeGuard Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onUpload: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(ScoreDisplay, {\n      results: analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TYt2PwM57qQ46yDWopqBtJQdDKc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","FileUpload","ScoreDisplay","jsxDEV","_jsxDEV","App","_s","analysisResult","setAnalysisResult","error","setError","handleFileUpload","file","formData","FormData","append","response","fetch","method","body","data","json","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpload","results","_c","$RefreshReg$"],"sources":["C:/Users/abhir/OneDrive/Desktop/CodeGuard/frontend/src/App.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport FileUpload from './components/FileUpload';\r\nimport ScoreDisplay from './components/ScoreDisplay';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleFileUpload = async (file) => {\r\n    setError(null);\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8000/analyze', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      const data = await response.json();\r\n      setAnalysisResult(data);\r\n    } catch (error) {\r\n      setError('Failed to analyze file - please check the format and try again');\r\n      console.error('Error analyzing file:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>CodeGuard Analyzer</h1>\r\n      <FileUpload onUpload={handleFileUpload} />\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {analysisResult && <ScoreDisplay results={analysisResult} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,gBAAgB,GAAG,MAAOC,IAAI,IAAK;IACvCF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCb,iBAAiB,CAACY,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,QAAQ,CAAC,gEAAgE,CAAC;MAC1EY,OAAO,CAACb,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEL,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BpB,OAAA;MAAAoB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BxB,OAAA,CAACH,UAAU;MAAC4B,QAAQ,EAAElB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzCnB,KAAK,iBAAIL,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrDrB,cAAc,iBAAIH,OAAA,CAACF,YAAY;MAAC4B,OAAO,EAAEvB;IAAe;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV;AAACtB,EAAA,CA9BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}